<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="updateNote">
    <parameter name="content" description="Content of the Note."/>
    <parameter name="deleted" description="Whether the Note should be deleted or not."/>
    <parameter name="modifyDate" description="Date the note was modified (in seconds)."/>
    <parameter name="createDate" description="Date the note was created (in seconds)."/>
    <parameter name="systemTags"
               description="These tags convey a bit of note meta information, used primarily to tweak the user interface."/>
    <parameter name="tags" description="Tags the note should be put under."/>
    <parameter name="version" description="Version of the note."/>
    <parameter name="noteKey" description="Unique identifier of the Note."/>
    <sequence>
        <property name="uri.var.content" expression="$func:content"/>
        <property name="uri.var.deleted" expression="$func:deleted"/>
        <property name="uri.var.modifyDate" expression="$func:modifyDate"/>
        <property name="uri.var.createDate" expression="$func:createDate"/>
        <property name="uri.var.systemTags" expression="$func:systemTags"/>
        <property name="uri.var.tags" expression="$func:tags"/>
        <property name="uri.var.version" expression="$func:version"/>
        <property name="uri.var.noteKey" expression="$func:noteKey"/>

        <payloadFactory media-type="json">
            <format>
                {
                "content":"$1"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.content')"/>
            </args>
        </payloadFactory>

        <script language="js">
            <![CDATA[
			    var payload = mc.getPayloadJSON();
					   
				var deleted = mc.getProperty('uri.var.deleted');
				var modifyDate=mc.getProperty('uri.var.modifyDate');
				var createDate=mc.getProperty('uri.var.createDate');
				var systemTags=mc.getProperty('uri.var.systemTags');
				var tags=mc.getProperty('uri.var.tags');
                var version=mc.getProperty('uri.var.version');
				
				if(deleted !=null && deleted!="") {
					payload.deleted = eval("("+deleted+")");
				}
				
				if(modifyDate !=null && modifyDate!="") {
					payload.modifydate = modifyDate;
				}  
				
				if(createDate !=null && createDate!="") {
					payload.createdate = createDate;
				}  
		
				if(systemTags !=null && systemTags!="") {
					payload.systemtags = eval("("+systemTags+")");
				}        	      	
				
				if(tags !=null && tags!="") {
					payload.tags = eval("("+tags+")");
				} 
            
                if (version != null && version != "") {
                  payload.version = version; 
                }                    	
				
				mc.setPayloadJSON(payload);
			]]>
        </script>

        <call>
            <endpoint>
                <http method="post"
                      uri-template="{+uri.var.apiUrl}/data/{+uri.var.noteKey}?auth={+uri.var.authToken}&amp;email={+uri.var.email}"/>
            </endpoint>
        </call>

        <!--Header Content-Type: application/json is added to the incoming response since the API returns Content-Type: text/html
           even when the body contains JSON. -->
        <header name="Content-Type" value="application/json" scope="transport"/>

        <!-- Remove custom Headers from the API Response -->
        <header name="vary" action="remove" scope="transport"/>
        <header name="alternate-protocol" action="remove" scope="transport"/>
    </sequence>
</template>